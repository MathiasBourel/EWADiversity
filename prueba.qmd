---
title: "Essais"
author: "Mathias Bourel and Jairo Cugliari"
format: html
editor: visual
---

In this work we adapt EWA algorithm for aggregating experts including the diversity term in the updating of the weights:

$$p_{m,t}=\frac{e^{-\eta \sum \limits_{s=1}^{t-1}(f_{m,s}-y_s)^2}}{\sum \limits_{m=1}^{M}e^{-\eta \sum \limits_{s=1}^{t-1}(f_{m,s}-y_s)^2}}\,\,\,\,\text{(original EWA)}$$ $$p_{m,t}=\frac{e^{-\eta \left[ \sum \limits_{s=1}^{t-1}(f_{m,s}-y_s)^2 - \sum \limits_{s=1}^{t-1}(f_{m,s}-\hat{y}_s)^2 \right]}}{\sum \limits_{m=1}^{M}e^{-\eta \left[ \sum \limits_{s=1}^{t-1}(f_{m,s}-y_s)^2 - \sum \limits_{s=1}^{t-1}(f_{m,s}-\hat{y}_s)^2 \right]}}\,\,\,\,\text{(modificate EWA)}$$

We want to see if this modification in the reweighting is better than the orginal EWA algorithm. To see this, we repeat the same experiments as done in the opera package with the data electric load to predict electricity consumption.

```{r}
#install.packages("opera")
library("opera")
source("ewa.R")
data(electric_load)
attach(electric_load)
idx_data_test <- 620:nrow(electric_load)
data_train <- electric_load[-idx_data_test, ] 
data_test <- electric_load[idx_data_test, ]  
plot(Load, type = "l", main = "The electric Load")
```


```{r}
plot(Temp, Load, pch = 16, cex = 0.5, main = "Temperature vs Load")
```
```{r,echo=T,include=F}
#The experts
library(mgcv)
gam.fit <- gam(Load ~ s(IPI) + s(Temp) + s(Time, k=3) + 
                 s(Load1) + as.factor(NumWeek), data = data_train)
gam.forecast <- predict(gam.fit, newdata = data_test)
# medium term model
medium.fit <- gam(Load ~ s(Time,k=3) + s(NumWeek) + s(Temp) + s(IPI), data = data_train)
electric_load$Medium <- c(predict(medium.fit), predict(medium.fit, newdata = data_test))
electric_load$Residuals <- electric_load$Load - electric_load$Medium

# autoregressive correction
ar.forecast <- numeric(length(idx_data_test))
for (i in seq(idx_data_test)) {
  ar.fit <- ar(electric_load$Residuals[1:(idx_data_test[i] - 1)])
  ar.forecast[i] <- as.numeric(predict(ar.fit)$pred) + electric_load$Medium[idx_data_test[i]]
}

library(caret)
gbm.fit <- train(Load ~ IPI + IPI_CVS + Temp + Temp1 + Time + Load1 + NumWeek, data = data_train, method = "gbm")
gbm.forecast <- predict(gbm.fit, newdata = data_test)
```

```{r}
Y <- data_test$Load
X <- cbind(gam.forecast, ar.forecast, gbm.forecast)
matplot(cbind(Y, X), type = "l", col = 1:6, ylab = "Weekly load", 
        xlab = "Week", main = "Expert forecasts and observations")
````

````{r}
mezcla0<- mixture(model = "EWA", loss.type = "square")
mezcla <- mezcla0
for (i in 1:length(Y)) {
  mezcla <- predict(mezcla, newexperts = X[i,], newY = Y[i])
}
summary(mezcla)
``````
